<?xml version="1.0"?>

<!-- Build file for Noodle -->

<project name="Noodle" default="jar" basedir=".">

    <target name="init">
        <property name="Name" value="Noodle"/>
        <property name="version" value="2.3.2"/>
        <property name="project" value="noodle"/>
        <property name="build.dir" value="../bin"/>
        <property name="build.src" value="${build.dir}/src"/>
        <property name="build.dest" value="${build.dir}/classes"/>
        <property name="src.java.dir" value="../src/java"/>
        <property name="javadoc.destdir" value="../www/apidocs"/>
        <property name="final.name" value="${project}-${version}"/>
        <property name="final.dir" value="../${final.name}/"/>
        <property name="year" value="2003"/>
        <property name="ant.home" value="."/>
        <property name="debug" value="on"/>
        <property name="optimize" value="off"/>
        <property name="deprecation" value="on"/>
        <property file="build.properties"/>
        <property file="default.properties"/>

        <filter token="year" value="${year}"/>
        <filter token="version" value="${version}"/>
        <filter token="date" value="${TODAY}"/>        
    </target>

    <!-- =================================================================== -->
    <!-- Prepares the build directory                                        -->
    <!-- =================================================================== -->
    <target name="prepare" depends="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.src}"/>

        <copydir src="${src.java.dir}/org" dest="${build.src}/org"
            includes="**/*.java **/*.properties"
            filtering="on"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source directory                                       -->
    <!-- =================================================================== -->
    <target name="compile" depends="prepare">
		<echo message="srcdir: ${build.src}"/>
		<echo message="destdir: ${build.dest}"/>
		<echo message="debug: ${debug}"/>
        <property name="servlet.jar" value="../lib/servlet.jar"/>
        <javac srcdir="${build.src}"
            destdir="${build.dest}"
            debug="${debug}"
            classpath="${servlet.jar}:../lib/httpclient.jar:../lib/jsoup-1.7.2.jar"
            deprecation="${deprecation}"
            optimize="${optimize}"/>
    </target>
  
    <!-- =================================================================== -->
    <!-- Compiles the source directory and creates a .jar file               -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">
        <jar jarfile="${build.dir}/${final.name}.jar"
            basedir="${build.dest}"
            excludes="**/package.html"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="javadocs" depends="prepare">
        <mkdir dir="${javadoc.destdir}"/>
        <javadoc
            sourcepath="${build.src}"
            packagenames="org.tigris.noodle.*"
            destdir="${javadoc.destdir}"
            author="true"
            private="true"
            version="true"
            use="true"
            windowtitle="${Name} ${version} API"
            doctitle="${Name} ${version} API"
            bottom="Copyright &#169; ${year} Tigris.org. All Rights Reserved."
        />
    </target>
    
    <!-- =================================================================== -->
    <!-- Package                                                             -->
    <!-- =================================================================== -->
    <target name="package" depends="jar,javadocs">
        <mkdir dir="${final.dir}"/>
        <mkdir dir="${final.dir}/src/java"/>
        <copydir src="${build.dir}/src/" dest="${final.dir}/src/java/"/>
        <copydir src="../www" dest="${final.dir}/www"
            excludes="**/dist/**"/>
        <copydir src="../build" dest="${final.dir}/build"/>
        
        <copyfile src="${build.dir}/${final.name}.jar" dest="${final.dir}/${final.name}.jar"/>
    </target>
  
    <!-- =================================================================== -->
    <!-- Packages the distribution with ZIP                                  -->
    <!-- =================================================================== -->
    <target name="package-zip" depends="package">
        <zip zipfile="../${Name}-${version}.zip" basedir="../" includes="**/${final.name}/**"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Packages the distribution with TAR-GZIP                             -->
    <!-- =================================================================== -->
    <target name="package-tgz" depends="package">
        <tar tarfile="../${Name}-${version}.tar" basedir="../" includes="**/${final.name}/**"/>
        <gzip zipfile="../${Name}-${version}.tar.gz" src="../${Name}-${version}.tar"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Packages the distribution with ZIP and TAG-GZIP                     -->
    <!-- =================================================================== -->
    <target name="package-all" depends="package-zip, package-tgz">
    </target>
    
    <!-- =================================================================== -->
    <!-- Cleans up the build directory                                       -->
    <!-- =================================================================== -->
    <target name="clean">
        <deltree dir="${build.dir}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Target to build a                                                   -->
    <!-- jar archive for HttpClient. Note that it expects the                -->
    <!-- HttpClient.zip archive to already be expanded                       -->
    <!-- =================================================================== -->
    <target name="httpclient">
        <jar jarfile="../lib/httpclient.jar"
            basedir="../lib"
            includes="*/*.class, */http/*.class, */https/*.class, */shttp/*.class"
            />
    </target>

    <!-- =================================================================== -->
    <!-- Target to build a                                                   -->
    <!-- WAR archive for Noodle                                              -->
    <!-- =================================================================== -->
    <target name="war" depends="compile">
        <property name="war.dir" value="../noodle-war"/>
        <property name="webinf.dir" value="${war.dir}/WEB-INF"/>

        <!-- setup some directories -->
        <mkdir dir="${war.dir}"/>
        <mkdir dir="${webinf.dir}"/>
        <mkdir dir="${webinf.dir}/lib"/>

        <!-- Need to go into the WEB-INF directory because you don't want them in htdocs -->
        <mkdir dir="${webinf.dir}/classes"/>

        <!-- properties files for Noodle -->
        <copyfile src="../src/NoodleResources.properties" dest="${webinf.dir}/NoodleResources.properties"/>

        <!-- properties files for Noodle -->
        <copyfile src="../lib/httpclient.jar" dest="${webinf.dir}/lib/httpclient.jar"/>
        <copyfile src="../lib/jsoup-1.7.2.jar" dest="${webinf.dir}/lib/jsoup-1.7.2.jar"/>

        <!-- copy the web.xml file to the WEB-INF/web.xml -->
        <copyfile src="../src/web.xml" dest="${webinf.dir}/web.xml"/>

        <!-- copy the dependency .jar files to WEB-INF/lib dir -->
        <echo message="srcdir: ${build.dest}/org"/>
        <copydir src="${build.dest}/org" dest="${webinf.dir}/classes/org"/>

        <echo message=""/>
        <echo message="Now, copy your '${war.dir}' directory to your 'tomcat/webapps/'"/>
        <echo message="directory and rename it to '${project}'."/>
        <echo message=""/>
    </target>
</project>
